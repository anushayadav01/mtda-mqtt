#!/usr/bin/env python3

import getopt
import sys

from mtda_mqtt.main import MTDAMqtt

class A:
    def __init__(self):
        self.agent = None
        self.remote = "localhost"


    def target_cmd(self,args):
        if len(args) > 0:
            cmd=args[0]
            args.pop(0)

            cmds = {
                    'help': self.target_help,
                    'off': self.target_off,
                    'on': self.target_on
                   }
            if cmd in cmds:
                return cmds[cmd](args)
            else:
                print("unknown target command '%s'!" % (cmd), file=sys.stderr)
                return 1



    def main(self):
        config = None
        daemonize = False
        detach = True 
        options,stuff = getopt.getopt(sys.argv[1:], 'c:dhnr:v', ['daemon','help', 'no-detach', 'remote=', 'version'])
        print(type(options),type(stuff))
        print(options)
        for opt, arg in options:
            if opt in ('-c', '--config'):
                config = arg
            if opt in ('-d', '--daemon'):
                daemonize = True
            if opt in ('-h', '--help'):
                self.help_cmd()
                sys.exit(0)
            if opt in ('-n', '--no-detach'):
                detach = False
            if opt in ('-r', '--remote'):
                self.remote = arg
                print(self.remote)
            if opt in ('-v', '--version'):
                sys.exit(0)
        print(len(stuff), stuff)

        cmd = stuff[0]
        stuff.pop(0)

        cmds = {
#                'getenv': self.getenv_cmd,
#                'help': self.help_cmd,
#                'setenv': self.setenv_cmd,
                 'target': self.target_cmd,
#                'storage': self.storage_cmd
               }
        '''
        if cmd in cmds:
            if cmd!='help':
                self.agent =  
        '''

if __name__ == '__main__':
    obj=A()
    obj.main()
